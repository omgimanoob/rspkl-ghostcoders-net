/*!******************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[2]!./assets/sass/_app.scss ***!
  \******************************************************************************************************************************************************************************************/
@charset "UTF-8";
/*
 * This file is part of the Kimai time-tracking app.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
/* prettier-ignore */
/* prettier-ignore */
.inline-search {
  max-width: 200px;
  /* the entire inline-search should actually use .input-group-flat, but that causes some weird css problems inside the dropdown menu */
}
.inline-search #searchTerm {
  border-right: 0;
}

@media (min-width: 360px) {
  .inline-search {
    max-width: 235px;
  }
}
@media (min-width: 768px) {
  .inline-search {
    max-width: 325px;
  }
  .search-dropdown {
    width: 500px;
  }
}
/* Format the company title in the left navigation, as Tabler is optimized for an image only */
h1.navbar-brand a span {
  display: inline-block;
  padding-top: 0.5rem;
}
h1.navbar-brand a:hover {
  text-decoration: none;
}

.page-actions .dropdown-menu,
#export-buttons .dropdown-menu,
.inline-search .dropdown-menu {
  /* bootstrap thead.sticky-top has z-index 1020 and the reporting form dropdowns hide behind that */
  z-index: 1021;
}

/* reduce the default font size for the brand header */
.navbar {
  --tblr-navbar-brand-font-size: 1rem;
}

/*
 * This file is part of the Kimai time-tracking app.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
.error-page {
  margin-bottom: 50px;
}

/*
 * This file is part of the Kimai time-tracking app.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
@media print {
  .sf-toolbar, .control-sidebar {
    display: none !important;
  }
  .col-print-12 {
    width: 100%;
  }
  .content-wrapper {
    margin: 0 !important;
  }
  section.content {
    margin: 0;
    padding: 0;
  }
  span i.dot {
    display: none;
    margin-right: 0 !important;
  }
}
/*
 * This file is part of the Kimai time-tracking app.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
/* used in security screens and other full-size pages */
.page-center {
  justify-content: center;
}

/* make sure that elements can be hidden without taking space (eg. hidden modals like the search or column visibility)  */
.hidden-no-space {
  margin: 0;
  padding: 0;
}

/* used at least in the duration dropdown */
.pre-scrollable {
  max-height: 340px;
  overflow-y: scroll;
}

td {
  /* table cells that contain badges (like the team or timesheet view)
     and are multi-line entries the badges do not have margin between them */
}
td.timesheet-description ul {
  padding-left: 15px;
}
td.timesheet-description p {
  margin: 0;
}
td.badges {
  line-height: 22px;
}

.open-edit {
  cursor: pointer;
}

/* allow minimized table columns, eg. customer team & visibility */
th.w-min,
td.w-min {
  width: 1%;
  white-space: nowrap;
}

table.dataTable thead > tr > th.hw-min {
  width: 1%;
  white-space: normal;
}

/* If a table column contains ONLY avatar <img> it will collapse, so make it a defined width */
.w-avatar {
  width: 40px;
}
.w-avatar img.avatar {
  /* a weird bug in tables with real avatar <img> only causes them to collapse */
  max-width: 40px;
}

.list-group-item {
  /* !important rules, because dark theme overwrites list-group-item */
}
.list-group-item.danger {
  padding-left: 1.3rem;
  border-left: 0.2rem solid #d63939 !important;
}
.list-group-item.success {
  padding-left: 1.3rem;
  border-left: 0.2rem solid #2fb344 !important;
}

/* Scrollable boxes (eg. widgets on dashboard) */
.box-body-scrollable {
  overflow: auto;
  max-height: 340px;
}

#customer_details_box th,
#project_details_box th,
#activity_details_box th {
  width: 30%;
}

/*
 * This file is part of the Kimai time-tracking app.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1021;
  background: rgba(255, 255, 255, 0.7);
}
.overlay > .fas {
  position: absolute;
  top: 50vh;
  left: 50vw;
  margin-left: -15px;
  margin-top: -15px;
  color: #000;
  font-size: 30px;
}

/*
 * This file is part of the Kimai time-tracking app.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
table.dataTable {
  clear: both;
  margin-bottom: 0 !important;
  max-width: none !important;
}
table.dataTable thead .sorting,
table.dataTable thead .sorting_asc,
table.dataTable thead .sorting_desc {
  cursor: pointer;
  position: relative;
}
table.dataTable thead .sorting_asc,
table.dataTable thead .sorting_desc {
  font-weight: bold;
}
table.dataTable thead .sorting:after,
table.dataTable thead .sorting_asc:after,
table.dataTable thead .sorting_desc:after {
  padding-left: 5px;
  font-family: "Font Awesome 5 Free";
  opacity: 0.5;
  font-size: 12px;
}
table.dataTable thead .sorting:after {
  opacity: 0.2;
  content: "\f0dc"; /* sort */
}
table.dataTable thead .sorting_asc:after {
  content: "\f077";
}
table.dataTable thead .sorting_desc:after {
  content: "\f078";
}
table.dataTable thead > tr > th {
  vertical-align: top;
  white-space: nowrap;
}
table.dataTable th:active {
  outline: none;
}

table.table-bordered thead th,
table.table-bordered thead td {
  border-left-width: 0;
  border-top-width: 0;
}
table.table-bordered tbody th,
table.table-bordered tbody td {
  border-left-width: 0;
  border-bottom-width: 0;
}
table.table-bordered tfoot th,
table.table-bordered tfoot td {
  border-left-width: 0;
  border-bottom-width: 0;
}
table.table-bordered th:last-child,
table.table-bordered td:last-child {
  border-right-width: 0;
}

@media (min-width: 1200px) {
  table.dataTable.table > tbody > tr > td {
    vertical-align: middle;
  }
}
table.dataTable {
  /* action column */
  /* order is important, "today” should overwrite "weekend" therefor later in the file */
}
table.dataTable .actions {
  width: 40px;
}
table.dataTable tr {
  /* summary row - used in many tables to show rows with summarized values like durations or money */
}
table.dataTable tr.summary td {
  font-weight: bold;
  border: 0;
  background-color: var(--tblr-bg-surface-secondary);
}
table.dataTable tr th.multiCheckbox {
  width: 15px;
}
table.dataTable tr.overlapping {
  border-top: 2px solid rgba(214, 57, 57, 0.1);
}
table.dataTable tr.exported {
  opacity: 0.7;
}
table.dataTable td {
  /*
      Make sure that the action buttons do not line-break if another column takes all available space
      See https://github.com/twbs/bootstrap/issues/9939#issuecomment-37682952
   */
}
table.dataTable td .btn-group {
  display: flex;
}
table.dataTable td .label {
  font-size: 85%;
  padding: 0.3em 0.6em 0.3em;
  line-height: 24px;
}
table.dataTable td span.label-invisible {
  opacity: 0.6;
}
table.dataTable th.weekend,
table.dataTable td.weekend {
  background-color: var(--tblr-bg-surface-secondary);
}
table.dataTable th.today {
  background-color: var(--tblr-highlight-bg);
}
table.dataTable th.total,
table.dataTable td.total {
  font-weight: bold;
}

/* Quick entry form */
.form-dataTable table.dataTable .form-group {
  margin-bottom: 0;
}

table.table-hover tr.exported:hover {
  opacity: 1;
}

.calendar-entry ul {
  padding: 0;
  list-style-type: none;
}
.calendar-entry div {
  white-space: pre-line;
}

.draggable {
  cursor: grab;
}

#timesheet_calendar {
  --bs-gray-400: var(--tblr-border-color);
  --bs-gray-200: var(--tblr-gray-200);
}

.fc-day-sat, .fc-day-sun {
  background-color: var(--tblr-bg-surface-secondary);
}

/*
 * This file is part of the Kimai time-tracking app.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
@keyframes ticktac-blink {
  0% {
    opacity: 1;
  }
  5% {
    opacity: 0.95;
  }
  10% {
    opacity: 0.9;
  }
  15% {
    opacity: 0.85;
  }
  20% {
    opacity: 0.8;
  }
  25% {
    opacity: 0.75;
  }
  30% {
    opacity: 0.7;
  }
  35% {
    opacity: 0.65;
  }
  40% {
    opacity: 0.6;
  }
  45% {
    opacity: 0.65;
  }
  50% {
    opacity: 0.7;
  }
  55% {
    opacity: 0.75;
  }
  60% {
    opacity: 0.8;
  }
  65% {
    opacity: 0.85;
  }
  70% {
    opacity: 0.9;
  }
  75% {
    opacity: 0.95;
  }
  100% {
    opacity: 1;
  }
}
.ticktac-start i,
.ticktac-stop i {
  animation: ticktac-blink 2s step-end infinite;
  font-size: 140%;
}

/* Full size with bright colors => navbar turns dark in small screens: button and color would still be white */
@media (max-width: 991.98px) {
  aside.navbar .btn-outline-white,
  header.navbar .btn-outline-white {
    border-color: hsla(0, 0%, 100%, 0.2);
  }
}
/* bootstrap thead.sticky-top has z-index 1020 and tomselect dropdowns often hide behind that */
.ts-dropdown {
  z-index: 1021;
}

/* Tabler defines a min-width of 7rem, what makes many input fields become a two-line field
  e.g. a 7 rem input does not fit behind a word like "Germany" in a 3 column form inside a modal */
.ts-control > input {
  min-width: unset;
}

.ts-dropdown .optgroup [data-selectable].option {
  padding-left: 20px;
}

/* bootstrap thead.sticky-top has z-index 1020 and the reporting form dropdowns hide behind that */
.checkbox-menu.show {
  z-index: 1021;
}

/* make sure that at least xx:yy fits into the widget */
.duration-widget .input-group {
  min-width: 110px;
}
.duration-widget input.duration-input {
  min-width: 55px;
}

#report-form div.btn-list {
  width: 100%;
}
#report-form div.btn-list div.selectpicker {
  min-width: 200px;
  max-width: 400px;
}
#report-form div.btn-list li.dropdown-item .form-check {
  margin-bottom: 0;
}

.color-choice-item {
  width: 20px;
  height: 20px;
  display: inline-block;
  margin-right: 10px;
  border-radius: var(--tblr-border-radius);
}

fieldset:empty {
  display: none;
}

/* e.g. the work contract settings is user profile render rows with mb-3 and the last row doesn't need that */
fieldset > .mb-3.row:last-child {
  margin-bottom: 0 !important;
}

.form-fieldset-light {
  border-radius: 0;
  margin-bottom: 0;
  border-top: none;
  border-right: none;
  border-left: none;
  background-color: unset;
}

.form-fieldset-light:last-child {
  border: none;
}

.modal-content {
  box-shadow: 0 10px 80px rgba(0, 0, 0, 0.6);
}

/*
    make sure that the progressbar title does not wrap and does not need to be embedded in a container with white-space: nowrap
    used for example in the project-overview report
*/
.progress-group .progress-title {
  width: 100%;
  white-space: nowrap;
}
.progress-group .progress-title .progress-text {
  display: inline-block;
  width: 1%;
}
.progress-group .progress-title .progress-number {
  display: inline-block;
  width: 98%;
  float: none;
}

.initials {
  font-weight: bold;
  font-size: 13px;
}

.avatar-xs {
  width: 23px;
  height: 23px;
}
.avatar-xs .initials {
  font-size: 10px;
}

.avatar-sm {
  width: 38px;
  height: 38px;
}
.avatar-sm .initials {
  font-size: 17px;
}

.avatar-md {
  width: 45px;
  height: 45px;
}
.avatar-md .initials {
  font-size: 21px;
}

.avatar-lg {
  width: 60px;
  height: 60px;
}
.avatar-lg .initials {
  font-size: 28px;
}

.widget-user-image {
  border-radius: 50%;
  border: 3px solid #fff;
}
.widget-user-image .avatar {
  width: 83px;
  height: 83px;
}
.widget-user-image .avatar .initials {
  font-size: 40px;
}

/* Detail tables like my teams (Dashboard) or */
table.dataTable.table > tbody > tr > td.avatars .avatar {
  margin: 1px;
}

/* decreases the margin between avatars, see https://github.com/tabler/tabler/issues/1567 */
.avatar-list-stacked .avatar {
  margin-right: calc(var(--tblr-avatar-size) * -0.2) !important;
}

[data-bs-theme=dark] table.dataTable th.today {
  color: var(--tblr-muted);
}
[data-bs-theme=dark] .overlay {
  background: rgba(0, 0, 0, 0.5);
}
[data-bs-theme=dark] .overlay > .fas {
  color: var(--tblr-white);
}

/*
 * This file is part of the Kimai time-tracking app.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
/*
    ----------- This file contains rules that only page to certain pages -----------
 */
/* weekly working times AKA quick-entries form */
section.quick-entry-page {
  /* shrinks the dropdown elements for project and activity to fit into the table, instead of adjusting to the longest option element */
  /* make the duration field and dropdown smaller */
}
section.quick-entry-page #quick_entry_form {
  display: none;
}
section.quick-entry-page .ts-wrapper {
  display: table;
  table-layout: fixed;
}
section.quick-entry-page #quick_entry_box .duration-widget .input-group {
  min-width: 85px;
}
section.quick-entry-page #quick_entry_box .duration-widget .btn-duration-preset {
  padding: 7px 8px 7px 5px;
}
section.quick-entry-page #quick_entry_box .duration-widget input {
  padding: 7px 3px 7px 7px;
}

/* fix for vertical labels in date-time pickers, if they are used in half-column forms, e.g. "create tasks" or "create expenses" */
fieldset legend.col-form-label {
  padding-top: 0;
}

/* See project assignment to teams */
fieldset.form-fieldset legend {
  font-size: 1rem;
  font-weight: bold;
}

/* Fixing the margin between the divider and items in context menu or dropdowns with optgroups  */
.ts-dropdown .optgroup:before {
  --tblr-spacer: .5rem;
}

.dropdown-divider {
  --tblr-dropdown-divider-margin-y: .5rem;
}

/*
 * This file is part of the Kimai time-tracking app.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
.float-help {
  position: fixed;
  width: 50px;
  height: 50px;
  border-radius: 50px;
  bottom: 20px;
  right: 20px;
  background-color: var(--tblr-body-color);
  text-align: center;
  z-index: 1021;
  /* box-shadow: 2px 2px 3px var(--tblr-body-color); */
}
.float-help i {
  margin-top: 11px;
  color: var(--tblr-body-bg);
  font-size: 30px;
}

@media (max-width: 767.98px) {
  .float-help {
    width: 36px;
    height: 36px;
    border-radius: 36px;
  }
  .float-help i {
    margin-top: 8px;
    font-size: 20px;
  }
}
/*
 * This file is part of the Kimai time-tracking app.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
html[dir=rtl] .fa-chevron-left:before {
  content: "\f054";
}
html[dir=rtl] .fa-chevron-right:before {
  content: "\f053";
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/